install.packages('ggplot2', dependencies = T)
install.packages("ggplot2")
install.packages("stringi")
install.packages('yaml')
library(ggplot2)
reddit <- read.csv('reddit.csv')
str(reddit)
levels(reddit$age.range)
library(datasets)
data(iris)
?iris
#tapply(Sepal.Length, Species, mean)["virginica"]
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm=TRUE)
iris
apply(iris[, 1:4], 2, mean)
mean(iris$Sepal.Length[iris$Species=="virginica"])
library(datasets)
data(mtcars)
#There will be an object names 'mtcars' in your workspace. You can find some information about the dataset by running
?mtcars
abs(sapply(split(mtcars$hp, mtcars$cyl), mean)[[1]] - sapply(split(mtcars$hp, mtcars$cyl), mean)[[3]])
library(datasets)
data(mtcars)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
setwd("C:/$user/PERSONAL/0 CURSOS ONLINE/Coursera - R Programming (Johns Hopkins)/Week 3/assignment2")
setwd("C:/$user/PERSONAL/0 CURSOS ONLINE/Coursera - R Programming (Johns Hopkins)/Week 3/ProgrammingAssignment2")
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL                                           # begins by setting the inv to NULL as a placeholder for a future value
set <- function(y) {                                  # defines a function to set the vector, x, to a new vector, y, and resets the inverse, inv, to NULL
x <<- y
inv <<- NULL
}
get <- function() x                                   # returns the vector, x
setInverse <- function(inverse) inv <<- inverse       # sets the inverse, inv, to inv
getInverse <- function() inv                          # returns the inverse, inv
list(set = set,
get = get,
setInverse = setInverse,
getInverse = getInverse)                         # returns the 'special vector' containing all of the functions defined
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getInverse()
if (!is.null(inv)) {          # checks if the inverse has been calculated
message("getting cached data of the inverse")
return(inv)             # if the inverse is cached, returns it
}
mat <- x$get()                # else, first get the matrix
inv <- solve(mat, ...)        # and calculate the inverse
x$setInverse(inv)             # next cavche the inverse of the matrix
inv                           # finally, it returns the result
}
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getInverse()
library(swirl)
swirl()
install.packages("swirl")
setwd("C:/$user/PERSONAL/github/gasdatarecord")
read.csv(gdata.csv)
read.csv("gdata.csv")
gdata <- read.csv("gdata.csv")
str (gdata)
summary (gdata)
levels(gdata$eurosLitro)
library(ggplot2)
qplot(data=gdata, x = gdata$eurosLitro)
qplot(data=gdata, x = gdata$eurosLitro, y= gdata$date)
qplot(data=gdata, y = gdata$eurosLitro, x = gdata$date)
